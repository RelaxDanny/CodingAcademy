return 0 는 잘 종료되었단 뜻
return 1또는 다른 숫자는 문제가 있다는 뜻

컴퓨터 메모리의 단위:
  전원 끄면 없어져버리는 휘발성 메모리 RAM = Random Access Memory -> RAM
  안 없어지는 비휘발성 메모리 ROM = Read Only Memory -> CD-ROM, DVD-ROm, Harddisk


32 페이지 코드
int 정수는 a 에 -2147483648 에서부터 2147483647

a = 10000000000000;이런걸 넣으면 어떤게 뜨는지 보여주기 (초과)

33페이지 테이블 보여주기


"%d" 는a 의 값 (정확히는 처음 "" 다음에 오는 첫 번째 변수) 을 10 진수 로

34 페이지 코드
%o = 8진수 Octal
%x = 16진수 Hexadecimal



35 페이지 코드 실수형 변수:
float, double
double은 15자리까지 정확하고 나머지는 지수로 표시
float는 선언 시 뒤에 f를 붙여줘야 함 안쓰면 double처럼 인식

36 페이지 코드
%.2f는 소수점 둘째 자리 까지만 표시하란 뜻 -> %.100f하면 100자리 ㄹㅇ 나옴
%5d는 숫자의 자리수를 5자리로 맞추라는 것 -> 앞에 공백을 둠 -> 숫자의 자리수가 5보다 크면 걍 전부 프린트함
%6.3f는 6자리를 맞추되, 소수점 3자리까지만 출력

41페이지 코드
계산, 연산

43페이지 코드
정수 연산 정수 = 정수여야 한다.

47페이지 코드
++a와 a++는 다르다
++a는 a가 1이 더해진 상태로 되는것이고
a++는 a가 불러진 코드 이후에 더해지는 것


48페이지 비트연산자
 - 8개의 비트는 1바이트 이진법으론 8자리라 볼 수 있다.
 - 1바이트는 십진수로 나타내면 0 ~ 255까지
 - 비트연산자에는 & (and), |(or), XOR, <<,>> 쉬프트연산, ~(반전, negation)

XOR은 두 수가 달라야만 TRUE다 (1) 그냥 두 비트의 더하기라 생각 하면 됨 

<<연산은 비트를 왼쪽으로 쉬프트 시킴
[101011] 에서 <<을 하면 1[010110]이 됨 -> a << 1 = 010110
- 주의점 뒤에 새롭게 추가해야하는 숫자는 0으로 표기하고, 맨앞에 자리는 버려짐

>>연산은 좀 다름
11100010 >>3 = 11111100
00011001 >>3 = 00000011

대신 8비트를 기준으로 보면
00000000 0000000 00000000 10100010 -> 가장 가까운 왼쪽이 0이기 때문에 1이 아닌 0이 추가됨
이런식으로 오른쪽으로 옮기면서 채워야 할 왼쪽 부분은 왼쪽의 가장 앞부분의 숫자를 가져다가 씀.
그리고 똑같이 오른쪽으로 가서 없어지는 숫자들은 버려짐.


55페이지 컴퓨터의 음수 표현법
코드 실행하기
비트의 맨 앞에 음수인지 양수인지를 판단하는 sign비트를 넣는 법
0111 = -7
1111 = 7
0000 = 0
1000 = 0 -> 매우 큰 문제 자원 낭비함

이에대한 해결 방법 으로 Two's Complement라는 2의 보수표현법이 제시됨
어떤 숫자 x가 있고 -x가 있을때 이 둘의 합은 항상 0이 나와야 된다는 개념을 이용함
x = 7일때 이진법으로 표기시 0111이 된다 (4비트만 기억한다 가정하자면)
그러면 0110 + (-7)을 하게 되면 0이 나옴.
그러면 -7은 결국 1001이 될거임 2진법의 덧셈을 이용하면 10000이 됨
1001을 만들려면 그렇다면 0111을 뒤집은다음 (1000)의 상태에서 1을 더해주면 기존 수의 부호를
바꿀 수 있음
결과적으로 이진법에서의 부호 바꾸는 법은 기존 이진을 1 은 0, 0 은 1로 바꾸고, 1을 더해주면 됨

이게 별로 중요하지 않아 보이지만,
96년도에 Arian 5라는 로켓이 이런 오버플로우 때문에 추락해버림, 3억7천만 달러 손해.


59페이지 코드
unsigned int의 경우 음수가 없기 때문에 음수의 값 21어쩌고를 양수에 할당해서 양수를 4294967295
까지 받을 수 있게 해줌
-1 = 1111 1111 1111 1111임 양수로 바꾸면 0000 0000 0000 0001 = 1 이니까
그래서 이걸 %u로 표현해서 프린트하면 최대값인 4294967295가 나옴
%u는 unsigned 타입으로 해석하라는 의미


